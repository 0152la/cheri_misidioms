aal/aal.h:241:#  include "aal_cheri.h"
aal/aal_cheri.h:50:    static constexpr uint64_t aal_cheri_features =
aal/aal_cheri.h:78:      SNMALLOC_ASSERT(__builtin_cheri_tag_get(a.unsafe_ptr()));
aal/aal_cheri.h:80:      if constexpr (aal_cheri_features & SetBoundsTrapsUntagged)
aal/aal_cheri.h:88:      void* pb = __builtin_cheri_bounds_set_exact(a.unsafe_ptr(), size);
aal/aal_cheri.h:91:        __builtin_cheri_tag_get(pb) && "capptr_bound exactness failed.");
aal/aal_cheri.h:117:      return __builtin_cheri_round_representable_length(sz);
backend_helpers/defaultpagemapentry.h:4:#include "cheri_slabmetadata_mixin.h"
mem/localalloc.h:467:    SNMALLOC_SLOW_PATH void dealloc_cheri_checks(void* p)
mem/localalloc.h:476:        !__builtin_cheri_sealed_get(p), "Sealed capability in deallocation");
mem/localalloc.h:495:        (__builtin_cheri_perms_get(p) & reqperm) == reqperm,
mem/localalloc.h:509:        __builtin_cheri_tag_get(p), "Untagged capability in deallocation");
mem/localalloc.h:516:        __builtin_cheri_length_get(p) > 0,
mem/localalloc.h:612:      p_raw = __builtin_cheri_offset_set(p_raw, 0);
mem/localalloc.h:638:        dealloc_cheri_checks(p_tame.unsafe_ptr());
mem/localalloc.h:651:        dealloc_cheri_checks(p_tame.unsafe_ptr());
pal/pal_posix.h:152:      // https://github.com/CTSRD-CHERI/cheribsd/issues/962 is fixed.
pal/pal_freebsd.h:10:#    include <cheri/cherireg.h>
pal/pal_freebsd.h:131:      if constexpr (Aal::aal_cheri_features & Aal::AndPermsTrapsUntagged)
pal/pal_freebsd.h:139:        __builtin_cheri_perms_and(
